#!/usr/bin/env python
# ---------------------------------------------------------------------------------------------
# Copyright (c) 2012-2013, Ryan Galloway (ryan@rsgalloway.com)
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#  - Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
#  - Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
#  - Neither the name of the software nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# ---------------------------------------------------------------------------------------------
# docs and latest version available for download at
#   http://github.com/rsgalloway/utter
# ---------------------------------------------------------------------------------------------

import os
import sys
import glob
import utter

__doc__ = """
utter is a simple Python utility that converts text to speech, and
optionally language translation.

Usage:
    utter <file.txt> | 'some text' [-s <lang>] [-t <lang>]
"""

# System command used to play mp3 files
_PLAY_COMMAND_ = {
    'darwin': 'afplay',
    'posix': 'mpg123'
}

def createParser():
    from optparse import OptionParser, OptionGroup
    parser = OptionParser(usage=__doc__)
    base_group = OptionGroup(parser, 'Basic Options')
    base_group.add_option('-s', '--source', default='en', 
            help='source language (default is english)')
    base_group.add_option('-t', '--target', default='en', 
            help='target language (default is english)')
    parser.add_option_group(base_group)
    return parser

def play(mp3dir):
    files = glob.glob(os.path.join(mp3dir, 'tts_*.mp3'))
    try:
        for f in files:
            cmd = '%s %s' %(_PLAY_COMMAND_.get(sys.platform), f)
            os.system(cmd)
    except Exception, e:
        print e
        return 1

def main(text):
    return play(utter.tts(text, opts.source, opts.target))

if __name__ == "__main__":
    parser = createParser()
    (opts, args) = parser.parse_args()
    if len(args) != 1:
        parser.print_help()
    else:
        sys.exit(main(args[0]))
